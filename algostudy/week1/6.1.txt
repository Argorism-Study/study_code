6. 개관
해결한 문제의 특성 이해, 동작 시간과 사용하는 공간 사이의 상충 관계 이해, 적절한 자료 구조 선택
알고리즘 설계 패러다임: 주어진 문제를 해결하기 위해 알고리즘이 채택한 전략이나 관점 – 패턴 찾기

6.1 도입
무식하게 풀 수 있을까?
완전 탐색(exhaustive search): 가능한 방법을 전부 만들어 보기
예시) 열명의 학생을 순서대로 다 세워보기
플밍 대회: 프로그램을 빠르고 정확하게 구현하는 능력 검증을 위해 입력의 크기를 작게 제한한 문제들이 흔히 출제됨

6.2 재귀호출과 완전 탐색
For 반복문
재귀함수, 재귀호출 (recursive function, recursion) : 여러 조각으로 쪼개고, 한 조각을 수행, 나머지를 자기 자신을 호출해 실행하기
(코드 6.1)
더 이상 쪼개지지 않는 가장 작은 작업들 : 재귀호출의 기저사례 (base case)
(코드 6.2)
